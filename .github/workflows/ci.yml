name: CI
on:
  pull_request:
  push:
    branches:
      - master
jobs:
  build:
    runs-on: ubuntu-latest
    container: golangci/golangci-lint:v1.40.1
    steps:
      - uses: actions/checkout@v2
        with:
          # Required for Codecov report uploading.
          fetch-depth: 0
      - run: make install-cc-test-reporter BIN_PATH=/usr/local/bin
      - run: make build build-test test-update-linters lint
      - run: make test-cover-upload
  e2e:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: '1.18'
      - uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
      - name: Fetch dependencies and configure tests
        run: |
          curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
          helm repo add flexkube https://flexkube.github.io/charts/

          docker-compose -f e2e/docker-compose.yml up -d
          until test -f e2e/keys/id_rsa; do sleep 0.5; done

          sudo chown $(whoami): e2e/keys/id_rsa

          cat <<EOF > e2e/variables.auto.tfvars
            ssh_private_key_path = "$(pwd)/e2e/keys/id_rsa"
            nodes_cidr           = "172.17.0.0/24"
            node_ssh_port        = 2222
            workers_count        = 0
            container_runtime    = "docker"
            cidr_ips_offset      = 1
            kubelet_extra_args   = ["--fail-swap-on=false"]
          EOF
      - run: make build test-e2e-run TERRAFORM_BIN=terraform
  codespell:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: codespell-project/actions-codespell@master
        with:
          skip: .git,go.sum
          ignore_words_list: uptodate
          check_filenames: true
          check_hidden: true
  vagrant:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install vagrant
        run: |
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
          sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
          sudo apt-get update && sudo apt-get install vagrant
      - run: make test-vagrant
